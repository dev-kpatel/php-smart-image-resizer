diff --git a/app/dependencies.php b/app/dependencies.php
index 0000000..1111111 100644
--- a/app/dependencies.php
+++ b/app/dependencies.php
@@ -1,10 +1,12 @@
 <?php

 declare(strict_types=1);
 use Common\Settings\SettingsInterface;
 use DI\ContainerBuilder;
 use Monolog\Handler\StreamHandler;
 use Monolog\Logger;
 use Monolog\Processor\UidProcessor;
 use Psr\Container\ContainerInterface;
 use Psr\Log\LoggerInterface;
 use App\Support\Config;
@@ -12,7 +14,7 @@ return function (ContainerBuilder $containerBuilder) {
     $containerBuilder->addDefinitions([
         LoggerInterface::class => function (ContainerInterface $c) {
             $settings = $c->get(SettingsInterface::class);

             $loggerSettings = $settings->get('logger');
             $logger = new Logger($loggerSettings['name']);

             $processor = new UidProcessor();
             $logger->pushProcessor($processor);

             $handler = new StreamHandler($loggerSettings['path'], $loggerSettings['level']);
             $logger->pushHandler($handler);

             return $logger;
         },
-        'config' => function (ContainerInterface $c) {
-            $settings = $c->get(SettingsInterface::class);
-            $data = $settings->get('config');
-            $config = new Config($data);
-            return $config;
-        },
+        // Prefer type binding so Actions can type-hint Config directly
+        Config::class => function (ContainerInterface $c) {
+            $settings = $c->get(SettingsInterface::class);
+            return new Config($settings->get('config'));
+        },
     ]);
 };
diff --git a/src/Actions/Image/ImageAction.php b/src/Actions/Image/ImageAction.php
index 0000000..2222222 100644
--- a/src/Actions/Image/ImageAction.php
+++ b/src/Actions/Image/ImageAction.php
@@ -1,29 +1,33 @@
 <?php

 declare(strict_types=1);

 namespace App\Actions\Image;

 use Common\Actions\Action;
-use Common\Settings\SettingsInterface;
+use App\Support\Config;
 use Psr\Log\LoggerInterface;
-use Psr\Container\ContainerInterface;

 abstract class ImageAction extends Action
 {
-   /**
-   * get settings conainer
-   *
-   * @var array
-   */
-   protected $settings = [];
-
-  /**
-   * get config from setting conainer
-   *
-   * @var array
-   */
-   protected $config = [];
-
-   public function __construct(LoggerInterface $logger, ContainerInterface $c)
-   {
-       parent::__construct($logger);
-       $this->settings = $c->get(SettingsInterface::class);
-       $this->config = $c->get('config');
-   }
-    /** @var SettingsInterface */
-    protected SettingsInterface $settings;
+
+    /** @var Config */
+    protected Config $config;
+
+    /**
+     * Constructor injection (no service-locator / container argument).
+     */
+    public function __construct(
+        LoggerInterface $logger,
-        SettingsInterface $settings,
+        Config $config
+    ) {
+        parent::__construct($logger);
-        $this->settings = $settings;
+        $this->config = $config;
+    }
 }
